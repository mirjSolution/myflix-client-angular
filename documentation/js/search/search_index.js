var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.384,1,0.755]],["body/components/AppComponent.html",[0,0.619,1,1.297,2,1.526,3,0.414,4,0.414,5,1.284,6,1.442,7,1.284,8,1.284,9,0.349,10,2.496,11,1.526,12,2.159,13,1.284,14,2.305,15,1.749,16,2.461,17,1.92,18,4.583,19,1.71,20,4.076,21,0.414,22,1.081,23,2.302,24,0.912,25,1.442,26,1.749,27,0.959,28,3.06,29,0.812,30,0.044,31,1.35,32,0.483,33,0.812,34,3.06,35,0.812,36,1.146,37,0.741,38,0.556,39,2.496,40,0.414,41,0.349,42,2.125,43,3.06,44,3.06,45,1.626,46,3.06,47,1.442,48,2.125,49,1.626,50,1.023,51,1.71,52,1.526,53,1.284,54,2.05,55,1.284,56,1.284,57,0.635,58,1.284,59,0.812,60,1.284,61,0.72,62,0.72,63,1.284,64,0.72,65,0.72,66,1.284,67,1.284,68,0.023,69,0.031,70,0.023]],["title/modules/AppModule.html",[71,1.717,72,1.717]],["body/modules/AppModule.html",[1,1.42,3,0.307,4,0.307,9,0.259,15,0.76,30,0.045,37,1.036,38,0.413,40,0.307,41,0.259,50,0.76,57,1.046,59,1.264,61,1.121,62,1.121,64,1.121,65,1.121,68,0.017,69,0.025,70,0.017,71,1.373,72,3.432,73,1.209,74,1.209,75,3.189,76,3.189,77,2.714,78,1.58,79,1.856,80,1.856,81,1.856,82,1.856,83,1.856,84,2.532,85,2.532,86,2.703,87,1.856,88,1.856,89,2.275,90,3.314,91,2.703,92,3.314,93,2.703,94,1.373,95,3.314,96,3.314,97,1.373,98,2.703,99,3.314,100,2.275,101,3.314,102,1.209,103,3.314,104,2.275,105,3.314,106,2.275,107,3.314,108,2.275,109,3.314,110,2.275,111,1.373,112,3.314,113,1.072,114,3.314,115,2.275,116,3.314,117,2.275,118,2.275,119,3.314,120,2.275,121,3.314,122,2.275,123,3.314,124,2.275,125,1.58,126,2.275,127,2.275,128,1.856,129,2.275,130,1.856,131,1.856,132,1.373,133,1.58,134,1.856,135,1.856,136,1.373,137,1.856,138,2.275,139,2.275,140,2.275,141,1.209]],["title/classes/AppPage.html",[41,0.324,142,1.975]],["body/classes/AppPage.html",[3,0.513,4,0.513,9,0.433,16,2.294,21,0.513,22,1.242,27,1.102,30,0.044,35,1.242,37,0.691,40,0.513,41,0.433,52,1.422,68,0.029,69,0.036,70,0.029,94,2.294,142,3.251,143,3.799,144,3.099,145,5.541,146,5.298,147,5.298,148,3.799,149,4.322,150,3.799,151,3.799,152,1.565,153,3.799,154,3.799,155,2.638,156,3.799]],["title/modules/AppRoutingModule.html",[71,1.717,84,1.511]],["body/modules/AppRoutingModule.html",[0,0.691,3,0.466,4,0.466,9,0.393,30,0.045,37,0.999,38,0.626,40,0.466,41,0.393,61,1.036,62,1.036,64,1.036,65,1.036,68,0.026,69,0.033,70,0.026,73,1.831,77,2.393,78,2.393,84,2.34,91,2.811,98,3.592,128,2.811,130,2.811,131,2.811,135,2.811,136,2.08,137,2.811,157,3.446,158,3.446,159,2.93,160,4.404,161,1.446,162,3.088,163,3.446,164,1.623,165,5.115,166,2.08,167,3.446,168,3.592,169,2.393,170,3.446]],["title/guards/AuthGuard.html",[162,1.717,171,1.975]],["body/guards/AuthGuard.html",[3,0.443,4,0.443,9,0.373,11,1.226,21,0.443,22,1.131,24,0.977,25,1.543,26,1.783,27,1.003,29,1.131,30,0.045,31,1.131,32,0.672,33,1.131,35,0.869,37,0.912,38,0.595,40,0.443,41,0.373,42,2.274,68,0.025,69,0.032,70,0.025,149,3.477,152,1.095,161,1.374,162,2.573,164,1.543,168,4.244,172,3.275,173,2.672,174,3.279,175,3.275,176,3.275,177,5.018,178,4.738,179,5.018,180,3.275,181,3.477,182,3.477,183,4.738,184,1.788,185,1.095,186,1.977,187,1.095,188,4.738,189,2.672,190,2.672]],["title/injectables/AuthService.html",[26,0.951,184,1.193]],["body/injectables/AuthService.html",[3,0.191,4,0.191,9,0.161,16,0.852,21,0.191,22,0.608,24,0.683,26,0.766,27,1.221,29,1.143,30,0.045,31,1.143,32,0.679,33,1.143,35,1.325,36,1.613,37,0.752,38,0.256,40,0.191,41,0.161,57,0.293,68,0.011,69,0.017,70,0.011,97,0.852,113,0.664,132,1.383,141,1.217,152,1.44,161,0.592,164,2.207,174,2.497,182,1.15,184,0.961,185,0.471,187,1.76,190,2.36,191,0.979,192,1.15,193,0.683,194,2.893,195,2.36,196,3.605,197,3.331,198,3.331,199,2.893,200,2.291,201,2.291,202,3.331,203,2.011,204,3.331,205,2.291,206,3.331,207,3.331,208,1.591,209,2.717,210,2.291,211,2.893,212,1.15,213,2.313,214,1.747,215,2.011,216,2.291,217,1.869,218,1.41,219,1.41,220,1.41,221,2.104,222,2.352,223,2.157,224,2.764,225,2.086,226,1.41,227,1.781,228,2.291,229,1.41,230,0.749,231,2.291,232,1.41,233,1.41,234,1.41,235,1.41,236,2.291,237,1.41,238,1.41,239,1.41,240,2.291,241,1.41,242,1.41,243,2.291,244,1.41,245,1.41,246,1.41,247,0.858,248,0.858,249,1.591,250,2.36,251,1.537,252,1.41,253,1.41,254,1.363,255,1.217,256,1.41,257,0.979,258,1.15,259,2.313,260,3.331,261,2.009,262,1.41,263,2.893,264,1.41,265,1.41,266,1.383,267,1.217,268,1.217,269,1.217,270,1.591,271,1.41,272,2.893,273,1.41,274,1.15,275,1.15,276,1.15,277,2.36,278,1.15,279,1.41,280,2.36,281,1.41,282,1.41,283,1.41,284,2.291,285,1.41,286,2.291,287,2.291,288,1.41,289,1.41,290,1.591,291,1.41,292,1.41,293,1.41,294,1.41,295,1.41,296,2.291,297,2.291,298,1.41,299,1.41,300,1.41,301,1.41,302,1.41]],["title/components/ErrorComponent.html",[0,0.384,57,0.59]],["body/components/ErrorComponent.html",[0,0.578,1,0.71,2,1.393,3,0.362,4,0.362,5,1.123,7,1.123,8,1.123,9,0.305,13,1.123,14,2.24,15,1.681,19,1.561,21,0.362,24,1.109,27,0.875,29,0.71,30,0.045,31,1.368,32,0.766,33,0.71,37,0.676,38,0.486,40,0.362,41,0.305,50,0.895,51,1.561,52,1.393,53,1.123,54,1.939,55,1.123,56,1.123,57,0.959,58,1.123,59,0.71,60,1.123,61,0.63,62,0.63,63,1.123,64,0.63,65,0.63,66,1.123,67,1.123,68,0.02,69,0.028,70,0.02,113,1.261,132,2.246,193,1.109,221,1.931,267,2.456,268,1.422,303,2.183,304,3.72,305,2.272,306,2.676,307,2.969,308,2.676,309,2.676,310,3.72,311,2.676,312,2.676,313,2.676,314,2.183,315,2.183,316,2.183,317,2.183,318,2.183,319,3.488,320,2.246,321,3.72,322,3.035,323,3.72,324,3.72,325,3.72,326,3.72,327,3.035,328,3.72,329,3.035,330,3.72,331,3.72,332,3.72]],["title/interceptors/ErrorInterceptor.html",[85,1.511,133,1.975]],["body/interceptors/ErrorInterceptor.html",[3,0.343,4,0.343,9,0.289,11,0.951,21,0.343,22,0.952,24,1.07,27,0.844,29,0.952,30,0.045,31,0.952,32,0.566,33,0.952,35,0.674,37,0.943,38,0.462,40,0.343,41,0.289,57,0.527,68,0.019,69,0.027,70,0.019,85,1.906,97,1.534,113,1.197,132,1.534,134,2.073,152,1.199,161,1.066,164,1.197,174,3.069,184,1.505,185,0.849,187,1.39,213,1.765,214,2.166,215,2.728,223,1.197,227,0.849,230,1.906,266,1.534,267,1.35,268,1.35,269,1.35,270,2.888,333,2.541,334,3.392,335,2.073,336,3.588,337,2.541,338,3.069,339,2.541,340,3.588,341,4.518,342,4.158,343,4.518,344,2.541,345,2.541,346,3.588,347,3.588,348,2.541,349,2.541,350,2.073,351,2.541,352,2.541,353,2.541,354,5.191,355,2.541,356,2.541,357,4.158,358,2.541,359,2.541,360,3.588,361,2.541,362,2.541,363,4.518,364,3.137,365,2.166,366,2.927,367,2.541,368,3.588,369,3.588,370,3.588,371,2.541,372,3.588,373,2.541,374,2.541,375,2.541]],["title/injectables/ErrorService.html",[184,1.193,338,1.717]],["body/injectables/ErrorService.html",[3,0.466,4,0.466,9,0.393,16,2.08,21,0.466,22,1.169,27,1.203,29,0.914,30,0.045,31,0.914,32,0.543,33,0.914,35,1.288,36,1.649,37,0.8,38,0.626,40,0.466,41,0.393,68,0.026,69,0.033,70,0.026,152,1.152,184,1.847,185,1.152,187,1.622,191,2.393,193,1.313,221,1.817,247,1.29,248,1.29,249,3.058,250,3.959,258,2.811,268,1.831,338,2.659,350,3.592,376,2.811,377,4.854,378,5.115,379,5.115,380,3.446,381,3.446,382,4.404,383,3.446,384,3.446,385,3.446,386,3.446,387,3.446]],["title/components/HeaderComponent.html",[0,0.384,59,0.755]],["body/components/HeaderComponent.html",[0,0.515,1,0.577,2,1.201,3,0.294,4,0.294,5,0.913,6,1.025,7,0.913,8,0.913,9,0.248,11,1.201,12,1.795,13,0.913,14,2.132,15,1.568,17,1.511,19,1.346,21,0.294,22,0.851,23,1.981,24,0.649,25,1.025,26,1.568,27,1.196,29,0.577,30,0.045,31,1.19,32,0.707,33,0.577,35,1.011,36,1.426,37,0.815,38,0.396,39,1.775,40,0.294,41,0.248,42,1.511,47,1.025,49,1.156,50,0.727,51,1.346,52,1.201,53,0.913,54,1.764,55,0.913,56,0.913,57,0.452,58,0.913,59,1.116,60,0.913,61,0.512,62,0.512,63,0.913,64,0.512,65,0.512,66,0.913,67,0.913,68,0.017,69,0.024,70,0.017,161,0.913,166,1.937,169,2.228,181,3.657,185,0.727,187,1.568,189,1.775,193,0.956,195,1.775,203,1.314,208,2.228,209,2.617,221,1.201,227,1.274,247,0.815,248,0.815,251,1.705,254,2.21,269,1.705,305,2.025,320,1.937,365,1.314,388,1.775,389,2.3,390,3.208,391,3.81,392,3.208,393,3.81,394,3.81,395,2.539,396,4.205,397,4.483,398,3.208,399,2.176,400,2.176,401,2.176,402,2.3,403,2.176,404,2.176,405,2.176,406,2.176,407,3.208,408,2.176,409,2.176,410,3.208,411,3.208,412,2.176,413,1.314,414,2.176,415,2.176,416,2.176,417,2.176,418,1.775,419,2.176,420,2.176,421,1.511,422,2.228,423,2.176,424,3.208,425,2.617,426,1.937,427,2.176,428,2.176,429,1.511,430,2.176,431,1.511,432,2.176,433,2.176,434,2.617]],["title/components/LoginComponent.html",[0,0.384,61,0.669]],["body/components/LoginComponent.html",[0,0.534,1,0.615,2,1.257,3,0.313,4,0.313,5,0.972,6,1.091,7,0.972,8,0.972,9,0.264,11,1.257,12,1.861,13,0.972,14,2.075,15,1.448,17,1.582,19,1.409,21,0.313,22,0.891,23,2.041,24,0.691,25,1.091,26,1.726,27,1.164,29,0.891,30,0.045,31,1.272,32,0.683,33,0.891,35,1.048,36,1.479,37,0.787,38,0.421,40,0.313,41,0.264,45,1.231,47,1.582,49,1.231,50,0.774,51,1.409,52,1.257,53,0.972,54,1.817,55,0.972,56,0.972,57,0.481,58,0.972,59,0.615,60,0.972,61,1.019,62,0.545,63,0.972,64,0.545,65,0.545,66,0.972,67,0.972,68,0.018,69,0.025,70,0.018,102,1.231,111,1.399,125,1.609,141,1.231,152,0.774,185,0.774,186,1.399,187,1.32,193,1.001,203,1.399,208,2.332,222,1.582,227,1.122,247,0.867,248,0.867,251,2.099,305,1.784,320,2.027,389,2.385,395,2.615,402,2.385,413,1.399,426,1.399,429,1.609,431,1.609,435,1.89,436,3.95,437,3.358,438,3.222,439,3.222,440,3.358,441,3.358,442,2.317,443,2.317,444,3.358,445,3.008,446,2.317,447,2.332,448,2.317,449,2.317,450,1.609,451,1.89,452,1.89,453,2.739,454,1.609,455,2.317,456,1.609,457,1.89,458,3.358,459,3.008,460,3.008,461,3.008,462,2.317,463,2.317,464,1.609,465,1.609,466,1.89,467,1.89,468,2.317,469,2.317,470,2.027,471,1.399]],["title/interfaces/LoginData.html",[255,1.511,472,1.511]],["body/interfaces/LoginData.html",[3,0.533,4,0.533,9,0.449,21,0.533,30,0.043,32,0.755,40,0.647,68,0.03,69,0.036,70,0.03,193,1.428,221,2.153,222,2.59,223,1.857,224,2.38,225,2.095,227,1.838,254,1.857,255,2.545,472,2.545,473,2.738,474,2.738]],["title/components/MoviesComponent.html",[0,0.384,62,0.669]],["body/components/MoviesComponent.html",[0,0.448,1,0.459,2,1.009,3,0.234,4,0.234,5,1.131,6,0.815,7,0.726,8,0.726,9,0.197,11,1.009,12,1.56,13,0.726,14,1.998,15,1.435,17,1.27,19,1.131,21,0.234,22,0.715,23,1.762,24,0.804,27,1.121,29,1.075,30,0.045,31,1.355,32,0.522,33,1.075,35,1.139,36,1.517,37,0.737,38,0.314,40,0.234,41,0.197,45,1.987,47,0.815,48,1.872,49,0.919,50,0.578,51,1.131,52,1.009,53,0.726,54,1.569,55,0.726,56,0.726,57,0.559,58,0.726,59,0.459,60,0.726,61,0.407,62,0.88,63,0.726,64,0.407,65,0.407,66,0.726,67,0.726,68,0.02,69,0.02,70,0.013,97,1.045,113,0.815,152,0.578,155,1.202,161,0.726,164,0.815,169,2.814,174,2.706,187,1.435,193,0.804,196,2.3,212,1.412,213,2.597,214,2,215,2.258,217,2.199,221,1.009,227,0.578,230,1.987,247,0.648,248,0.648,257,1.202,259,1.872,261,1.202,266,2,267,1.76,274,1.412,275,1.412,276,1.412,277,2.199,278,1.412,280,1.412,290,1.202,314,1.412,315,1.412,316,1.412,317,1.412,318,1.412,319,3.306,322,2.199,327,3.05,329,3.05,421,1.872,422,1.202,425,1.412,464,1.202,465,1.872,467,1.412,470,1.628,471,1.045,475,1.412,476,3.312,477,2.696,478,3.739,479,2.696,480,2.696,481,2.696,482,2.696,483,2.696,484,1.73,485,1.73,486,2.696,487,1.73,488,1.412,489,2.696,490,1.73,491,2.696,492,3.739,493,1.73,494,2.696,495,1.73,496,1.73,497,1.73,498,1.73,499,1.73,500,1.73,501,1.73,502,2.696,503,2.696,504,2.696,505,2.696,506,2.696,507,3.739,508,3.739,509,1.73,510,1.73,511,1.73,512,3.739,513,1.412,514,3.312,515,1.73,516,1.73,517,1.73,518,1.73,519,1.73,520,1.73,521,1.73,522,1.73,523,1.73,524,1.412,525,1.73,526,1.73,527,1.412,528,1.412,529,1.412,530,3.312,531,3.312,532,1.73,533,1.73,534,1.73,535,1.73,536,1.73]],["title/components/ProfileUpdateComponent.html",[0,0.384,64,0.669]],["body/components/ProfileUpdateComponent.html",[0,0.414,1,0.407,2,0.918,3,0.331,4,0.207,5,0.644,6,0.723,7,0.644,8,0.644,9,0.175,11,0.918,12,1.443,13,0.644,14,1.796,15,1.169,17,1.155,19,1.029,21,0.207,22,0.651,23,1.648,24,0.457,25,0.723,26,1.532,27,1.21,29,0.813,30,0.045,31,1.136,32,0.757,33,0.813,35,1.015,36,1.432,37,0.741,38,0.279,40,0.207,41,0.175,45,0.815,47,1.648,48,2.126,50,0.513,51,1.029,52,0.918,53,0.644,54,1.467,55,0.644,56,0.644,57,0.509,58,0.644,59,0.407,60,0.644,61,0.361,62,0.361,63,0.644,64,0.823,65,0.361,66,0.644,67,0.644,68,0.012,69,0.019,70,0.012,102,0.815,111,0.926,113,0.723,136,3.134,152,0.819,155,1.065,164,1.155,185,0.513,186,0.926,187,1.169,193,0.731,196,2.126,214,1.849,215,2.112,221,1.602,222,1.921,223,1.802,224,1.849,225,1.303,227,1.363,230,2.032,247,1.146,248,1.146,257,1.065,259,1.065,261,2.429,266,1.48,267,2.032,268,1.627,269,2.032,270,1.065,290,1.702,305,1.303,307,1.065,364,1.702,365,0.926,389,1.849,395,2.112,402,1.849,413,0.926,418,1.251,421,1.702,422,1.065,426,1.48,429,1.702,431,1.065,445,2.831,447,2.655,450,1.065,454,1.065,456,1.702,459,2.429,460,1.702,461,1.702,464,1.065,465,1.065,466,1.251,470,2.112,471,0.926,488,1.251,513,1.251,524,1.251,527,1.251,528,1.251,529,1.251,537,4.235,538,1.251,539,3.062,540,2.452,541,3.062,542,3.062,543,3.062,544,2.452,545,3.498,546,2.452,547,2.452,548,1.534,549,1.534,550,2.452,551,1.534,552,1.534,553,2.452,554,1.534,555,1.534,556,1.534,557,1.534,558,1.534,559,1.534,560,1.534,561,1.534,562,1.534,563,1.534,564,1.534,565,1.534,566,1.534,567,1.534,568,1.534,569,1.534,570,1.534,571,1.534,572,1.534,573,1.534,574,1.534,575,1.534,576,1.534,577,1.534,578,1.534,579,3.062,580,1.534,581,1.534,582,1.251,583,1.251,584,1.534,585,2.853,586,2.853,587,2.853,588,2,589,2.452,590,2,591,4.077,592,2.452,593,2,594,1.534,595,1.534,596,1.534,597,1.534,598,2.452,599,1.534,600,1.534,601,1.534,602,1.534,603,1.534,604,1.534]],["title/components/RegisterComponent.html",[0,0.384,65,0.669]],["body/components/RegisterComponent.html",[0,0.533,1,0.614,2,1.255,3,0.312,4,0.312,5,0.97,6,1.089,7,0.97,8,0.97,9,0.263,11,1.255,12,1.859,13,0.97,14,2.074,15,1.447,17,1.58,19,1.407,21,0.312,22,0.89,23,2.039,24,0.689,25,1.089,26,1.725,27,1.163,29,0.89,30,0.045,31,1.271,32,0.682,33,0.89,35,1.047,36,1.477,37,0.787,38,0.42,40,0.312,41,0.263,45,1.229,47,1.089,49,1.229,50,0.773,51,1.407,52,1.255,53,0.97,54,1.815,55,0.97,56,0.97,57,0.48,58,0.97,59,0.614,60,0.97,61,0.544,62,0.544,63,0.97,64,0.544,65,1.018,66,0.97,67,0.97,68,0.018,69,0.025,70,0.018,102,1.229,111,1.396,125,1.606,141,1.229,152,0.773,166,2.025,185,0.773,186,1.396,187,1.319,193,1,203,1.396,222,1.58,223,1.58,225,1.782,227,1.121,247,0.866,248,0.866,251,2.097,305,1.782,389,2.382,395,2.613,402,2.382,413,1.396,438,3.219,439,3.219,445,3.005,447,2.329,450,1.606,451,1.886,452,1.886,453,2.736,454,1.606,456,1.606,457,1.886,459,3.005,460,2.329,461,2.329,470,2.025,471,1.396,582,1.886,583,1.886,585,3.53,586,3.53,587,3.53,588,2.736,605,1.886,606,3.945,607,3.353,608,3.353,609,3.353,610,2.312,611,2.312,612,3.353,613,2.312,614,2.312,615,2.312,616,2.312,617,2.312]],["title/interfaces/RegisterData.html",[254,1.34,472,1.511]],["body/interfaces/RegisterData.html",[3,0.51,4,0.51,9,0.43,21,0.51,30,0.044,32,0.834,40,0.63,68,0.029,69,0.035,70,0.029,193,1.391,221,2.163,222,2.559,223,2.491,224,3.192,225,2.69,227,1.816,254,2.198,255,2.007,472,2.479,473,2.623,474,2.623]],["title/coverage.html",[618,3.164]],["body/coverage.html",[0,0.729,1,0.847,9,0.364,10,2.604,26,1.067,30,0.044,32,0.503,41,0.364,57,0.662,59,0.847,61,0.751,62,0.751,64,0.751,65,0.751,68,0.024,69,0.032,70,0.024,85,1.696,133,2.217,136,1.927,142,2.217,144,2.604,162,1.927,171,2.217,173,2.604,184,1.758,192,2.604,249,2.217,254,1.504,255,1.696,303,2.604,334,2.604,335,2.604,338,1.927,376,2.604,388,2.604,426,3.505,435,2.604,472,2.227,474,2.91,475,2.604,537,2.604,538,2.604,605,2.604,618,2.604,619,2.604,620,3.192,621,3.192,622,5.296,623,4.191,624,3.192,625,4.191,626,3.192,627,4.191,628,2.604,629,4.968,630,3.419,631,4.968,632,2.604,633,3.419,634,2.604,635,2.604,636,3.192,637,3.192]],["title/dependencies.html",[74,1.817,638,2.376]],["body/dependencies.html",[30,0.045,38,0.721,68,0.03,69,0.037,70,0.03,74,2.108,93,3.922,94,2.903,102,2.108,161,1.664,185,1.326,639,3.967,640,5.716,641,3.967,642,4.808,643,3.967,644,3.967,645,3.967,646,3.967,647,3.967,648,3.967,649,3.967,650,3.967,651,3.967]],["title/index.html",[21,0.321,652,2.376,653,2.376]],["body/index.html",[15,1.665,30,0.035,68,0.028,69,0.035,70,0.028,74,1.937,166,2.201,230,2.774,269,2.425,320,2.755,364,2.531,365,2.755,366,4.064,590,2.974,593,2.974,619,2.974,654,4.563,655,4.982,656,3.645,657,3.645,658,4.563,659,3.645,660,3.645,661,3.645,662,3.645,663,3.645,664,3.645,665,3.645,666,3.645,667,3.645,668,3.645,669,3.645,670,3.645,671,3.645,672,3.645,673,3.645,674,3.645,675,3.645,676,3.645,677,3.645,678,3.645,679,3.645,680,3.645,681,3.645,682,3.645,683,3.645,684,3.645,685,3.645,686,3.645,687,3.645,688,3.645,689,3.645,690,3.645,691,3.645,692,3.645,693,3.645,694,3.645,695,3.645,696,3.645,697,3.645,698,3.645]],["title/modules.html",[73,2.061]],["body/modules.html",[30,0.039,68,0.034,69,0.039,70,0.034,72,2.673,73,2.353,84,2.353,94,2.673,699,4.428,700,4.428,701,5.131,702,4.428,703,4.428]],["title/overview.html",[704,3.164]],["body/overview.html",[1,1.456,2,1.283,30,0.043,41,0.39,50,1.145,57,1.005,59,1.285,61,1.139,62,1.139,64,1.139,65,1.139,68,0.026,69,0.033,70,0.026,71,2.069,72,3.551,73,1.821,74,1.821,75,2.796,76,2.796,77,2.38,78,2.38,79,2.796,80,2.796,81,2.796,82,2.796,83,2.796,84,2.572,85,2.572,86,3.58,87,2.796,88,2.796,159,2.069,171,2.38,191,2.38,434,3.58,473,2.38,704,2.796,705,4.841,706,3.427,707,3.427]],["title/routes.html",[159,2.342]],["body/routes.html",[30,0.04,68,0.035,69,0.04,70,0.035,159,2.761]],["title/miscellaneous/variables.html",[708,1.938,709,2.79]],["body/miscellaneous/variables.html",[21,0.528,30,0.044,32,0.843,68,0.03,69,0.036,70,0.03,141,2.53,247,1.923,248,1.923,251,2.075,307,2.712,628,3.186,630,4.363,632,3.186,633,3.186,634,3.885,635,3.885,708,3.186,709,3.186,710,4.762,711,3.906,712,3.906,713,3.906,714,3.906,715,4.762,716,4.762]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":426,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":428,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":434,"title":{},"body":{"components/HeaderComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":692,"title":{},"body":{"index.html":{}}}],["10",{"_index":571,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["100",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["1024px",{"_index":533,"title":{},"body":{"components/MoviesComponent.html":{}}}],["10px",{"_index":516,"title":{},"body":{"components/MoviesComponent.html":{}}}],["11.0.2",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["11.0.4",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["1fr",{"_index":521,"title":{},"body":{"components/MoviesComponent.html":{}}}],["1rem",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["2",{"_index":705,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["20vw",{"_index":509,"title":{},"body":{"components/MoviesComponent.html":{}}}],["2rem",{"_index":513,"title":{},"body":{"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["3rem",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{}}}],["4",{"_index":707,"title":{},"body":{"overview.html":{}}}],["400",{"_index":371,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["5",{"_index":586,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["500",{"_index":373,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["6.6.0",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["60vw",{"_index":534,"title":{},"body":{"components/MoviesComponent.html":{}}}],["7",{"_index":706,"title":{},"body":{"overview.html":{}}}],["720px",{"_index":535,"title":{},"body":{"components/MoviesComponent.html":{}}}],["750px",{"_index":532,"title":{},"body":{"components/MoviesComponent.html":{}}}],["80",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["90vw",{"_index":536,"title":{},"body":{"components/MoviesComponent.html":{}}}],["accordion",{"_index":596,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["actions",{"_index":523,"title":{},"body":{"components/MoviesComponent.html":{}}}],["activatedroute",{"_index":397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["add",{"_index":675,"title":{},"body":{"index.html":{}}}],["added",{"_index":364,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ProfileUpdateComponent.html":{},"index.html":{}}}],["align",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["already",{"_index":363,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["angular",{"_index":655,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{}}}],["angular/compiler",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["angular/material/expansion",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/MoviesComponent.html":{},"dependencies.html":{}}}],["api",{"_index":666,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["app.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":659,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":72,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":142,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":84,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":145,"title":{},"body":{"classes/AppPage.html":{}}}],["auth.data.model",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.service",{"_index":186,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["auth/auth.data.model",{"_index":408,"title":{},"body":{"components/HeaderComponent.html":{}}}],["auth/auth.guard",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.service",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["auth/login/login.component",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/profile",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auth/register/register.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authdata",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdata).subscribe",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":671,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":162,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinformation",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["authinformation.token",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["authlistenersubs",{"_index":393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["author",{"_index":695,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["authservice",{"_index":26,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["authstatuslistener",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["authstatussub",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["auto",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/RegisterComponent.html":{}}}],["autoauthuser",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["available",{"_index":703,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["based",{"_index":661,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["between",{"_index":603,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["bio",{"_index":327,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["birth",{"_index":329,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["birthday",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginData.html":{},"components/ProfileUpdateComponent.html":{},"interfaces/RegisterData.html":{}}}],["block",{"_index":597,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["bolder",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{}}}],["boolean",{"_index":182,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":511,"title":{},"body":{"components/MoviesComponent.html":{}}}],["browse",{"_index":701,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":153,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":657,"title":{},"body":{"index.html":{}}}],["button",{"_index":594,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["buttontype",{"_index":541,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["called",{"_index":660,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":522,"title":{},"body":{"components/MoviesComponent.html":{}}}],["cards",{"_index":512,"title":{},"body":{"components/MoviesComponent.html":{}}}],["catcherror",{"_index":348,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((error",{"_index":353,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["center",{"_index":465,"title":{},"body":{"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["change",{"_index":673,"title":{},"body":{"index.html":{}}}],["characters",{"_index":587,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["class",{"_index":41,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":143,"title":{},"body":{"classes/AppPage.html":{}}}],["clearauthdata",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["clent",{"_index":690,"title":{},"body":{"index.html":{}}}],["client",{"_index":654,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":664,"title":{},"body":{"index.html":{}}}],["color",{"_index":431,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["columns",{"_index":517,"title":{},"body":{"components/MoviesComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["confirm",{"_index":579,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["const",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(authservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(data",{"_index":306,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(dialog",{"_index":337,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(http",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["constructor(public",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["container",{"_index":510,"title":{},"body":{"components/MoviesComponent.html":{}}}],["content",{"_index":155,"title":{},"body":{"classes/AppPage.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["context",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":618,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(username",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["credential",{"_index":369,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cursor",{"_index":528,"title":{},"body":{"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["data",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["data?.directorbio",{"_index":328,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data?.directorbirth",{"_index":330,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data?.directorname",{"_index":326,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data?.genredesc",{"_index":325,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data?.genrename",{"_index":323,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data?.message",{"_index":321,"title":{},"body":{"components/ErrorComponent.html":{}}}],["data?.synopsis",{"_index":331,"title":{},"body":{"components/ErrorComponent.html":{}}}],["database",{"_index":667,"title":{},"body":{"index.html":{}}}],["date",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginData.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["dato",{"_index":698,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":430,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorators",{"_index":309,"title":{},"body":{"components/ErrorComponent.html":{}}}],["default",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["delete",{"_index":593,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"index.html":{}}}],["delete(`https://myflix3.herokuapp.com/users/${username",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleted",{"_index":362,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["deletefavorite",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["deletefavorite(movie",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteprofile",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteprofile(username",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":74,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":492,"title":{},"body":{"components/MoviesComponent.html":{}}}],["description",{"_index":324,"title":{},"body":{"components/ErrorComponent.html":{}}}],["details",{"_index":674,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["directed",{"_index":503,"title":{},"body":{"components/MoviesComponent.html":{}}}],["directive",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["director",{"_index":505,"title":{},"body":{"components/MoviesComponent.html":{}}}],["directorbio",{"_index":317,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["directorbirth",{"_index":318,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["directorname",{"_index":316,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["display",{"_index":421,"title":{},"body":{"components/HeaderComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["documentation",{"_index":619,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["dynamic",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":144,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":150,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":148,"title":{},"body":{"classes/AppPage.html":{}}}],["element",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["element(by.css('app",{"_index":154,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LoginData.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["enter",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["entrycomponents",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["error'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["error.component.html",{"_index":304,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error.message",{"_index":367,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.error.text",{"_index":357,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.error.text.split",{"_index":359,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.status",{"_index":370,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error/error.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{}}}],["error/error.service",{"_index":351,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error1",{"_index":360,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorcomponent",{"_index":57,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorinterceptor",{"_index":85,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errorlistener",{"_index":377,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errormessage",{"_index":354,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorservice",{"_index":338,"title":{"injectables/ErrorService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{}}}],["errortext",{"_index":358,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errortext.includes('deleted",{"_index":361,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["existing",{"_index":662,"title":{},"body":{"index.html":{}}}],["exists",{"_index":372,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["expansion",{"_index":599,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["exports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["favorite",{"_index":591,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["favorite_border",{"_index":506,"title":{},"body":{"components/MoviesComponent.html":{}}}],["favorites",{"_index":542,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["favourite",{"_index":366,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["field",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["fill",{"_index":519,"title":{},"body":{"components/MoviesComponent.html":{}}}],["first",{"_index":679,"title":{},"body":{"index.html":{}}}],["flex",{"_index":422,"title":{},"body":{"components/HeaderComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["font",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{},"components/MoviesComponent.html":{}}}],["form",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["form.invalid",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["form.value.birthday",{"_index":583,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["form.value.confirmpassword",{"_index":578,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["form.value.email",{"_index":582,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["form.value.password",{"_index":456,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["form.value.username",{"_index":617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["gap",{"_index":515,"title":{},"body":{"components/MoviesComponent.html":{}}}],["genre",{"_index":322,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["genredesc",{"_index":315,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["genrename",{"_index":314,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["get('https://myflix3.herokuapp.com/movies",{"_index":499,"title":{},"body":{"components/MoviesComponent.html":{}}}],["getauthdata",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthstatuslistener",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["geterrorlistener",{"_index":378,"title":{},"body":{"injectables/ErrorService.html":{}}}],["getisauth",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmovies",{"_index":478,"title":{},"body":{"components/MoviesComponent.html":{}}}],["getprofile",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["getprofile(this.username",{"_index":565,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["getprofile(username",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":652,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":146,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusername",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":682,"title":{},"body":{"index.html":{}}}],["graph",{"_index":702,"title":{},"body":{"modules.html":{}}}],["grater",{"_index":585,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["grid",{"_index":514,"title":{},"body":{"components/MoviesComponent.html":{}}}],["guard",{"_index":171,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{}}}],["handleerror",{"_index":379,"title":{},"body":{"injectables/ErrorService.html":{}}}],["header",{"_index":390,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["header.component.html",{"_index":392,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":391,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":59,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["height",{"_index":508,"title":{},"body":{"components/MoviesComponent.html":{}}}],["html",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["http_interceptors",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{}}}],["httpclientmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":347,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":343,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":346,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":341,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://myflix3.herokuapp.com/auth/login",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://myflix3.herokuapp.com/users/${username}/movies/${movie",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://myflix3.herokuapp.com/users/${username}/movies/${moviename",{"_index":498,"title":{},"body":{"components/MoviesComponent.html":{}}}],["icon",{"_index":527,"title":{},"body":{"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["identifier",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":507,"title":{},"body":{"components/MoviesComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includes",{"_index":670,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["inject",{"_index":312,"title":{},"body":{"components/ErrorComponent.html":{}}}],["inject(mat_dialog_data",{"_index":310,"title":{},"body":{"components/ErrorComponent.html":{}}}],["injectable",{"_index":184,"title":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"coverage.html":{}}}],["injectables",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"overview.html":{}}}],["install",{"_index":683,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":685,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":336,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":340,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":133,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":335,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:18",{"_index":339,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor.ts:25",{"_index":344,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors",{"_index":333,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interface",{"_index":472,"title":{"interfaces/LoginData.html":{},"interfaces/RegisterData.html":{}},"body":{"interfaces/LoginData.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["interfaces",{"_index":473,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/RegisterData.html":{},"overview.html":{}}}],["invalid",{"_index":368,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["isauth",{"_index":188,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isauthenticated",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["isloading",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["items",{"_index":525,"title":{},"body":{"components/MoviesComponent.html":{}}}],["john",{"_index":697,"title":{},"body":{"index.html":{}}}],["justify",{"_index":524,"title":{},"body":{"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["left",{"_index":604,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["legend",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["li",{"_index":427,"title":{},"body":{"components/HeaderComponent.html":{}}}],["license",{"_index":693,"title":{},"body":{"index.html":{}}}],["list",{"_index":365,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/ProfileUpdateComponent.html":{},"index.html":{}}}],["lists",{"_index":592,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["literal",{"_index":307,"title":{},"body":{"components/ErrorComponent.html":{},"components/ProfileUpdateComponent.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":688,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["localstorage.getitem('username",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["localstorage.removeitem('expiration",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('username",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login(username",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":61,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindata",{"_index":255,"title":{"interfaces/LoginData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginData.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["logout",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["main",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["margin",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["mat_dialog_data",{"_index":313,"title":{},"body":{"components/ErrorComponent.html":{}}}],["matbuttonmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":580,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["matching",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["matdialogmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbarmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":531,"title":{},"body":{"components/MoviesComponent.html":{}}}],["media",{"_index":530,"title":{},"body":{"components/MoviesComponent.html":{}}}],["message",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/ProfileUpdateComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["minmax(300px",{"_index":520,"title":{},"body":{"components/MoviesComponent.html":{}}}],["mirjsolution.github.io/myflix",{"_index":689,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":708,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":694,"title":{},"body":{"index.html":{}}}],["module",{"_index":71,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":73,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["movie",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"index.html":{}}}],["movie.director.name",{"_index":504,"title":{},"body":{"components/MoviesComponent.html":{}}}],["movie.title",{"_index":502,"title":{},"body":{"components/MoviesComponent.html":{}}}],["moviename",{"_index":488,"title":{},"body":{"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["movies",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/MoviesComponent.html":{}}}],["movies'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["movies.component.html",{"_index":477,"title":{},"body":{"components/MoviesComponent.html":{}}}],["movies.component.scss",{"_index":476,"title":{},"body":{"components/MoviesComponent.html":{}}}],["movies/movies.componet",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["moviescomponent",{"_index":62,"title":{"components/MoviesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["multi",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["myflix",{"_index":320,"title":{},"body":{"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["navigateto",{"_index":147,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"coverage.html":{}}}],["next",{"_index":342,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":352,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":686,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["ngmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":395,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["none",{"_index":424,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":676,"title":{},"body":{"index.html":{}}}],["npm",{"_index":684,"title":{},"body":{"index.html":{}}}],["null",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":183,"title":{},"body":{"guards/AuthGuard.html":{}}}],["occurred",{"_index":356,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ok",{"_index":332,"title":{},"body":{"components/ErrorComponent.html":{}}}],["onaddtofavorite",{"_index":479,"title":{},"body":{"components/MoviesComponent.html":{}}}],["onaddtofavorite(moviename",{"_index":486,"title":{},"body":{"components/MoviesComponent.html":{}}}],["ondeletefavorite",{"_index":544,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["ondeletefavorite(moviename",{"_index":550,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["ondeleteprofile",{"_index":545,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["ondestroy",{"_index":389,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["onlogin",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogin(form",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":396,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onregister",{"_index":608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onregister(form",{"_index":612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onupdateprofile",{"_index":546,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["onupdateprofile(form",{"_index":553,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["onviewdirector",{"_index":480,"title":{},"body":{"components/MoviesComponent.html":{}}}],["onviewdirector(name",{"_index":489,"title":{},"body":{"components/MoviesComponent.html":{}}}],["onviewgenre",{"_index":481,"title":{},"body":{"components/MoviesComponent.html":{}}}],["onviewgenre(name",{"_index":491,"title":{},"body":{"components/MoviesComponent.html":{}}}],["onviewsynopsis",{"_index":482,"title":{},"body":{"components/MoviesComponent.html":{}}}],["onviewsynopsis(synopsis",{"_index":494,"title":{},"body":{"components/MoviesComponent.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["order",{"_index":677,"title":{},"body":{"index.html":{}}}],["out",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":704,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":601,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["package",{"_index":638,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":425,"title":{},"body":{"components/HeaderComponent.html":{},"components/MoviesComponent.html":{}}}],["panel",{"_index":600,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["parammap",{"_index":407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["parammap.has('username",{"_index":416,"title":{},"body":{"components/HeaderComponent.html":{}}}],["password",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["path",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["please",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["pointer",{"_index":529,"title":{},"body":{"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["post",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["private",{"_index":187,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["production",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/ProfileUpdateComponent.html":{},"index.html":{}}}],["profile.birthday.slice(0",{"_index":570,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["profile.email",{"_index":568,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["profile.favoritemovies",{"_index":573,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["profile/:username",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profiles",{"_index":672,"title":{},"body":{"index.html":{}}}],["profilesub",{"_index":543,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["profileupdate",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["profileupdatecomponent",{"_index":64,"title":{"components/ProfileUpdateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":149,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{}}}],["properties",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["protractor",{"_index":151,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["public",{"_index":305,"title":{},"body":{"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["put(`https://myflix3.herokuapp.com/users/${username",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["register",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["register.component.html",{"_index":607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":65,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerdata",{"_index":254,"title":{"interfaces/RegisterData.html":{}},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/LoginData.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["removed",{"_index":574,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["repeat(auto",{"_index":518,"title":{},"body":{"components/MoviesComponent.html":{}}}],["req",{"_index":345,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["require",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.token",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.user.username",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["rest",{"_index":665,"title":{},"body":{"index.html":{}}}],["result",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":152,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["returns",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["rico",{"_index":696,"title":{},"body":{"index.html":{}}}],["right",{"_index":595,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["route",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["router",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{}}}],["routermodule",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":159,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":185,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":349,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["saveauthdata",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveauthdata(username",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["see",{"_index":681,"title":{},"body":{"index.html":{}}}],["select",{"_index":588,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["servedemo",{"_index":687,"title":{},"body":{"index.html":{}}}],["server",{"_index":663,"title":{},"body":{"index.html":{}}}],["side",{"_index":658,"title":{},"body":{"index.html":{}}}],["size",{"_index":526,"title":{},"body":{"components/MoviesComponent.html":{}}}],["small",{"_index":669,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["space",{"_index":602,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["spacer",{"_index":433,"title":{},"body":{"components/HeaderComponent.html":{}}}],["span')).gettext",{"_index":156,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.data.model.ts",{"_index":474,"title":{},"body":{"interfaces/LoginData.html":{},"interfaces/RegisterData.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:13",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:16",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.service.ts",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:118",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:12",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:126",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:13",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:134",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:14",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:145",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:153",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:158",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:163",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:22",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:26",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:30",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:39",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:64",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:70",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:96",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:12",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:13",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:15",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:17",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:33",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/profile",{"_index":537,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"coverage.html":{}}}],["src/app/auth/register/register.component.ts",{"_index":605,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/register/register.component.ts:12",{"_index":615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:13",{"_index":609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:15",{"_index":614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:17",{"_index":611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:25",{"_index":613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/register/register.component.ts:38",{"_index":610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/error",{"_index":334,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/error/error.component",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["src/app/error/error.component.ts",{"_index":303,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/error/error.component.ts:11",{"_index":311,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.component.ts:8",{"_index":308,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/error/error.service.ts",{"_index":376,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{}}}],["src/app/error/error.service.ts:12",{"_index":383,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/error/error.service.ts:16",{"_index":381,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/error/error.service.ts:6",{"_index":384,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/error/error.service.ts:8",{"_index":380,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/header/header.component.ts",{"_index":388,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:14",{"_index":405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:16",{"_index":406,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:17",{"_index":403,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:18",{"_index":398,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:20",{"_index":404,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:22",{"_index":400,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:39",{"_index":401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:43",{"_index":399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/movies/movies.componet.ts",{"_index":475,"title":{},"body":{"components/MoviesComponent.html":{},"coverage.html":{}}}],["src/app/movies/movies.componet.ts:14",{"_index":496,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:15",{"_index":483,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:23",{"_index":485,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:27",{"_index":487,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:38",{"_index":484,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:49",{"_index":495,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:55",{"_index":490,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/app/movies/movies.componet.ts:61",{"_index":493,"title":{},"body":{"components/MoviesComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":653,"title":{"index.html":{}},"body":{}}],["state",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"interfaces/RegisterData.html":{}}}],["style",{"_index":423,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["subject",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{}}}],["subscribe",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["subscribe((authstatus",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((isauthenticated",{"_index":414,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe((profile",{"_index":566,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["subscribe((result",{"_index":500,"title":{},"body":{"components/MoviesComponent.html":{}}}],["subscription",{"_index":402,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ProfileUpdateComponent.html":{}}}],["support",{"_index":699,"title":{},"body":{"modules.html":{}}}],["supporting",{"_index":668,"title":{},"body":{"index.html":{}}}],["svg",{"_index":700,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":319,"title":{},"body":{"components/ErrorComponent.html":{},"components/MoviesComponent.html":{}}}],["table",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["text",{"_index":429,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["this.authlistenersubs",{"_index":412,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authlistenersubs.unsubscribe",{"_index":419,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice",{"_index":413,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.autoauthuser",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.createuser",{"_index":616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.deletefavorite(moviename).subscribe",{"_index":575,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.authservice.deleteprofile(username",{"_index":577,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.authservice.getisauth",{"_index":189,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["this.authservice.getusername",{"_index":410,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.login(form.value.username",{"_index":455,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":418,"title":{},"body":{"components/HeaderComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["this.authservice.updateprofile",{"_index":581,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.authstatuslistener.asobservable",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(false",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatuslistener.next(true",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authstatussub",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authstatussub.unsubscribe",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.birthday",{"_index":569,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.clearauthdata",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dialog.open(errorcomponent",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["this.email",{"_index":567,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.errorlistener.asobservable",{"_index":385,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorlistener.next(message",{"_index":386,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorlistener.next(null",{"_index":387,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.errorservice.throwerror(errormessage",{"_index":374,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.favorites",{"_index":572,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.getauthdata",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getmovies",{"_index":497,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.http",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{}}}],["this.http.delete",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`https://myflix3.herokuapp.com/users/${username",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post('https://myflix3.herokuapp.com/users",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloading",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.movies",{"_index":501,"title":{},"body":{"components/MoviesComponent.html":{}}}],["this.ngoninit",{"_index":576,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.profilesub",{"_index":564,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.profilesub.unsubscribe",{"_index":584,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["this.registerdata.username",{"_index":417,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.route.parammap.subscribe((parammap",{"_index":415,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.navigate",{"_index":190,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['movies",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.saveauthdata(username",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.token",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["this.userisauthenticated",{"_index":411,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.username",{"_index":409,"title":{},"body":{"components/HeaderComponent.html":{}}}],["throwerror",{"_index":350,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{}}}],["throwerror(error",{"_index":375,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(message",{"_index":382,"title":{},"body":{"injectables/ErrorService.html":{}}}],["token",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{}}}],["top",{"_index":598,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":420,"title":{},"body":{"components/HeaderComponent.html":{}}}],["unknown",{"_index":355,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["unregister",{"_index":590,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"index.html":{}}}],["update",{"_index":589,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["update.component.html",{"_index":540,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.scss",{"_index":539,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts",{"_index":538,"title":{},"body":{"components/ProfileUpdateComponent.html":{},"coverage.html":{}}}],["update.component.ts:15",{"_index":561,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:16",{"_index":559,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:17",{"_index":556,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:18",{"_index":557,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:19",{"_index":560,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:20",{"_index":563,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:21",{"_index":562,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:22",{"_index":558,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:24",{"_index":547,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:26",{"_index":555,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:28",{"_index":549,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:38",{"_index":551,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:47",{"_index":552,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:53",{"_index":554,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update.component.ts:73",{"_index":548,"title":{},"body":{"components/ProfileUpdateComponent.html":{}}}],["update/profile",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProfileUpdateComponent.html":{},"coverage.html":{}}}],["updated",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(username",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["use",{"_index":678,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["userisauthenticated",{"_index":394,"title":{},"body":{"components/HeaderComponent.html":{}}}],["username",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginData.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterData.html":{}}}],["using",{"_index":656,"title":{},"body":{"index.html":{}}}],["valid",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":709,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":691,"title":{},"body":{"index.html":{}}}],["void",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["want",{"_index":680,"title":{},"body":{"index.html":{}}}],["weight",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcome",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["width",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MoviesComponent.html":{},"components/ProfileUpdateComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                main {\n  width: 80%;\n  margin: 1rem auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMoviesComponent\n\nMoviesComponent\n\nAppModule -->\n\nMoviesComponent->AppModule\n\n\n\n\n\nProfileUpdateComponent\n\nProfileUpdateComponent\n\nAppModule -->\n\nProfileUpdateComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MoviesComponent\n                        \n                        \n                            ProfileUpdateComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErrorComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { MoviesComponent } from './movies/movies.componet';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\n\nimport { ProfileUpdateComponent } from './auth/profile-update/profile-update.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    RegisterComponent,\n    MoviesComponent,\n    ProfileUpdateComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatIconModule,\n    FormsModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTitleText\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { MoviesComponent } from './movies/movies.componet';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ProfileUpdateComponent } from './auth/profile-update/profile-update.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  {\n    path: 'profile/:username',\n    component: ProfileUpdateComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'movies', component: MoviesComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | Observable | Promise {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/']);\n    }\n    return isAuth;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authStatusListener\n                            \n                            \n                                    Private\n                                isAuthenticated\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoAuthUser\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                createUser\n                            \n                            \n                                deleteFavorite\n                            \n                            \n                                deleteProfile\n                            \n                            \n                                    Private\n                                getAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getIsAuth\n                            \n                            \n                                getProfile\n                            \n                            \n                                getToken\n                            \n                            \n                                getUsername\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            autoAuthUser\n                        \n                        \n                    \n                \n            \n            \n                \nautoAuthUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(username: string, password: string, email: string, birthday: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birthday\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFavorite\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFavorite(movie: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movie\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProfile\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProfile(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { token: any; username: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIsAuth\n                        \n                        \n                    \n                \n            \n            \n                \ngetIsAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(username, token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsername\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsername()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(username: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfile(username: string, email: string, password: string, birthday: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birthday\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\n\nimport { RegisterData, LoginData } from './auth.data.model';\nimport { ErrorComponent } from 'src/app/error/error.component';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  private authStatusListener = new Subject();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private dialog: MatDialog\n  ) {}\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUsername() {\n    const username = localStorage.getItem('username');\n    return username;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(\n    username: string,\n    password: string,\n    email: string,\n    birthday: Date\n  ) {\n    const authData: RegisterData = {\n      username: username,\n      password: password,\n      email: email,\n      birthday: birthday,\n    };\n    this.http.post('https://myflix3.herokuapp.com/users', authData).subscribe(\n      () => {\n        this.dialog.open(ErrorComponent, {\n          data: { message: 'Profile Successfully Created!' },\n        });\n        this.router.navigate(['/']);\n      },\n      (error) => {\n        this.authStatusListener.next(false);\n      }\n    );\n  }\n\n  getProfile(username, token) {\n    return this.http.get(`https://myflix3.herokuapp.com/users/${username}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  login(username: string, password: string) {\n    const authData: LoginData = {\n      username: username,\n      password: password,\n    };\n    this.http\n      .post(\n        'https://myflix3.herokuapp.com/auth/login',\n        authData\n      )\n      .subscribe(\n        (response) => {\n          const token = response.token;\n          const username = response.user.username;\n          this.token = token;\n          this.isAuthenticated = true;\n          this.authStatusListener.next(true);\n          this.saveAuthData(username, token);\n          this.router.navigate(['movies']);\n        },\n        (error) => {\n          this.authStatusListener.next(false);\n        }\n      );\n  }\n\n  updateProfile(\n    username: string,\n    email: string,\n    password: string,\n    birthday: Date\n  ) {\n    const profileUpdate: RegisterData = {\n      username: username,\n      email: email,\n      password: password,\n      birthday: birthday,\n    };\n    this.http\n      .put(`https://myflix3.herokuapp.com/users/${username}`, profileUpdate)\n      .subscribe(() => {\n        this.router.navigate(['movies']);\n        this.dialog.open(ErrorComponent, {\n          data: { message: 'Profile Successfully Updated!' },\n        });\n      });\n  }\n\n  deleteFavorite(movie: string) {\n    const username = localStorage.getItem('username');\n    const token = localStorage.getItem('token');\n    return this.http.delete(\n      `https://myflix3.herokuapp.com/users/${username}/movies/${movie}`\n    );\n  }\n\n  deleteProfile(username: string) {\n    this.http\n      .delete(`https://myflix3.herokuapp.com/users/${username}`)\n      .subscribe(() => {\n        this.router.navigate(['/']);\n      });\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n\n    if (authInformation.token === null) {\n      return;\n    }\n    this.token = authInformation.token;\n    this.isAuthenticated = true;\n    this.authStatusListener.next(true);\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    this.clearAuthData();\n    this.router.navigate(['/']);\n  }\n\n  private saveAuthData(username: string, token: string) {\n    localStorage.setItem('username', username);\n    localStorage.setItem('token', token);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('username');\n    return {\n      token: token,\n      username: username,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error/error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/error/error.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  templateUrl: './error.component.html',\n  selector: 'app-error',\n})\nexport class ErrorComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      message: string;\n      genreName: string;\n      genreDesc: string;\n      directorName: string;\n      directorBio: string;\n      directorBirth: string;\n      synopsis: string;\n    }\n  ) {}\n}\n\n    \n\n    \n        MyFlix\n\n  {{ data?.message }}\n  GENRE: {{ data?.genreName }}\n  \n    DESCRIPTION: {{ data?.genreDesc }}\n  \n  \n    NAME: {{ data?.directorName }}\n  \n  \n    BIO: {{ data?.directorBio }}\n  \n  \n    BIRTH: {{ data?.directorBirth }}\n  \n  SYNOPSIS: {{ data?.synopsis }}\n\n\n  OK\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'MyFlix  {{ data?.message }}  GENRE: {{ data?.genreName }}      DESCRIPTION: {{ data?.genreDesc }}        NAME: {{ data?.directorName }}        BIO: {{ data?.directorBio }}        BIRTH: {{ data?.directorBirth }}    SYNOPSIS: {{ data?.synopsis }}  OK'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/error-interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, errorService: ErrorService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/error-interceptor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/error-interceptor.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n  HttpClient,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ErrorComponent } from './error/error.component';\nimport { ErrorService } from './error/error.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private dialog: MatDialog,\n    private errorService: ErrorService,\n    private router: Router\n  ) {}\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An unknown error occurred!';\n        if (error.error.text) {\n          let errorText = error.error.text.split(' ');\n          const error1 = errorText.includes('deleted.');\n          if (error1) {\n            errorMessage = 'Profile successfully deleted';\n          } else if (error.error.text === 'Movie already added in the list') {\n            errorMessage = 'Movie already added in the list';\n          } else if (error.error.text === 'Successfully added to favourite') {\n            errorMessage = 'Successfully added to favourite';\n          }\n        } else if (error.error.message === 'Invalid Credential') {\n          errorMessage = 'Invalid Credential';\n        } else if (error.status === 400) {\n          errorMessage = 'Username already exists';\n        } else if (error.status === 500) {\n          errorMessage = 'Email already exists';\n        }\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\n        // this.errorService.throwError(errorMessage);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/error/error.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorListener\n                            \n                            \n                                handleError\n                            \n                            \n                                throwError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            throwError\n                        \n                        \n                    \n                \n            \n            \n                \nthrowError(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/error/error.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorListener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/error/error.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ErrorService {\n  private errorListener = new Subject();\n\n  getErrorListener() {\n    return this.errorListener.asObservable();\n  }\n\n  throwError(message: string) {\n    this.errorListener.next(message);\n  }\n\n  handleError() {\n    this.errorListener.next(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authListenerSubs\n                            \n                            \n                                    Private\n                                registerData\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                userIsAuthenticated\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authListenerSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RegisterData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { RegisterData } from '../auth/auth.data.model';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  userIsAuthenticated = false;\n\n  username: string;\n  private registerData: RegisterData;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService, public route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.username = this.authService.getUsername();\n\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuthenticated) => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('username')) {\n        this.registerData.username = this.authService.getUsername();\n      }\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  MyFlix\n\n  \n  \n    \n      Profile\n    \n    \n      Movies\n    \n    \n      LogIn\n    \n    \n      Register\n    \n\n    \n      Logout\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                ul {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  li {\n    padding: 0.5rem;\n  }\n  a {\n    text-decoration: none;\n    color: white;\n  }\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  MyFlix              Profile              Movies              LogIn              Register              Logout      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login/login.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((authStatus) => {\n        this.isLoading = false;\n      });\n  }\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.username, form.value.password);\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        Welcome To MyFlix!\n\n  \n  \n    \n      \n      Please enter valid username.\n    \n    \n      \n      Please enter a valid password.\n    \n    \n      Login\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                h1 {\n  margin: 3rem 0;\n  text-align: center;\n  color: red;\n  font-weight: bolder;\n}\nmat-form-field {\n  width: 100%;\n}\n\nmat-spinner {\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome To MyFlix!                    Please enter valid username.                    Please enter a valid password.              Login          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginData.html":{"url":"interfaces/LoginData.html","title":"interface - LoginData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterData {\n  username: string;\n  password: string;\n  email: string;\n  birthday: Date;\n}\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoviesComponent.html":{"url":"components/MoviesComponent.html","title":"component - MoviesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MoviesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movies/movies.componet.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movies\n            \n\n            \n                styleUrls\n                ./movies.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movies.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                movies\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMovies\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAddToFavorite\n                            \n                            \n                                onViewDirector\n                            \n                            \n                                onViewGenre\n                            \n                            \n                                onViewSynopsis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/movies/movies.componet.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMovies\n                        \n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movies/movies.componet.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movies/movies.componet.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAddToFavorite\n                        \n                        \n                    \n                \n            \n            \n                \nonAddToFavorite(movieName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movies/movies.componet.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onViewDirector\n                        \n                        \n                    \n                \n            \n            \n                \nonViewDirector(name, bio, birth)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movies/movies.componet.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onViewGenre\n                        \n                        \n                    \n                \n            \n            \n                \nonViewGenre(name, desc)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movies/movies.componet.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    desc\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onViewSynopsis\n                        \n                        \n                    \n                \n            \n            \n                \nonViewSynopsis(synopsis)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movies/movies.componet.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    synopsis\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            movies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/movies/movies.componet.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/movies/movies.componet.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ErrorComponent } from 'src/app/error/error.component';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.scss'],\n})\nexport class MoviesComponent implements OnInit {\n  private token: string;\n  movies: any[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.getMovies();\n  }\n\n  onAddToFavorite(movieName) {\n    const username = localStorage.getItem('username');\n\n    return this.http\n      .post(\n        `https://myflix3.herokuapp.com/users/${username}/movies/${movieName}`,\n        ''\n      )\n      .subscribe(() => {});\n  }\n\n  getMovies() {\n    this.token = localStorage.getItem('token');\n    this.http\n      .get('https://myflix3.herokuapp.com/movies', {\n        headers: { Authorization: `Bearer ${this.token}` },\n      })\n      .subscribe((result: any) => {\n        this.movies = result;\n      });\n  }\n\n  onViewSynopsis(synopsis) {\n    this.dialog.open(ErrorComponent, {\n      data: { synopsis: synopsis },\n    });\n  }\n\n  onViewDirector(name, bio, birth) {\n    this.dialog.open(ErrorComponent, {\n      data: { directorName: name, directorBio: bio, directorBirth: birth },\n    });\n  }\n\n  onViewGenre(name, desc) {\n    this.dialog.open(ErrorComponent, {\n      data: { genreName: name, genreDesc: desc },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ movie.title }}\n        Directed by: {{ movie.director.name }}\n      \n      \n      \n        \n          Genre\n        \n        \n          Director\n        \n        \n          Synopsis\n        \n        favorite_border\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./movies.component.scss\n                \n                img {\n  width: 100%;\n  height: 20vw;\n}\n.container {\n  padding-bottom: 1rem;\n  .movie-cards {\n    margin: 2rem;\n\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\n    mat-card-actions {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-size: 1rem;\n    }\n  }\n}\nmat-icon {\n  cursor: pointer;\n}\n\n@media all and (max-width: 750px) {\n  .movie-cards {\n    img {\n      height: auto;\n    }\n  }\n}\n\n@media all and (max-width: 1024px) {\n  .movie-cards {\n    img {\n      height: 60vw;\n    }\n  }\n}\n\n@media all and (max-width: 720px) {\n  .movie-cards {\n    img {\n      height: 90vw;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ movie.title }}        Directed by: {{ movie.director.name }}                                    Genre                          Director                          Synopsis                favorite_border            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoviesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileUpdateComponent.html":{"url":"components/ProfileUpdateComponent.html","title":"component - ProfileUpdateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileUpdateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/profile-update/profile-update.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./profile-update.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-update.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                birthday\n                            \n                            \n                                buttonType\n                            \n                            \n                                data\n                            \n                            \n                                email\n                            \n                            \n                                favorites\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                profileSub\n                            \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteFavorite\n                            \n                            \n                                onDeleteProfile\n                            \n                            \n                                onUpdateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/profile-update/profile-update.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/profile-update/profile-update.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/profile-update/profile-update.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteFavorite\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteFavorite(movieName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/profile-update/profile-update.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDeleteProfile\n                        \n                        \n                    \n                \n            \n            \n                \nonDeleteProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/profile-update/profile-update.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpdateProfile\n                        \n                        \n                    \n                \n            \n            \n                \nonUpdateProfile(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/profile-update/profile-update.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthday\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            favorites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            profileSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : localStorage.getItem('token')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : localStorage.getItem('username')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/profile-update/profile-update.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NgForm } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth.service';\nimport { ErrorComponent } from 'src/app/error/error.component';\n\n@Component({\n  templateUrl: './profile-update.component.html',\n  styleUrls: ['./profile-update.component.scss'],\n})\nexport class ProfileUpdateComponent implements OnInit, OnDestroy {\n  form: NgForm;\n  email: string;\n  birthday: string;\n  buttonType: string;\n  favorites = [];\n  username = localStorage.getItem('username');\n  token = localStorage.getItem('token');\n  data: { message: string };\n\n  private profileSub: Subscription;\n\n  constructor(public authService: AuthService, private dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.profileSub = this.authService\n      .getProfile(this.username, this.token)\n      .subscribe((profile: any) => {\n        this.email = profile.email;\n        this.birthday = profile.birthday.slice(0, 10);\n        this.favorites = profile.favoriteMovies;\n      });\n  }\n\n  onDeleteFavorite(movieName) {\n    this.dialog.open(ErrorComponent, {\n      data: { message: 'Movie successfully removed from list!' },\n    });\n    this.authService.deleteFavorite(movieName).subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n\n  onDeleteProfile() {\n    const username = localStorage.getItem('username');\n    this.authService.deleteProfile(username);\n    this.authService.logout();\n  }\n\n  onUpdateProfile(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    if (form.value.password !== form.value.confirmPassword) {\n      this.dialog.open(ErrorComponent, {\n        data: { message: 'Password and Confirm Password do not match!' },\n      });\n      return;\n    } else {\n      const username = localStorage.getItem('username');\n      this.authService.updateProfile(\n        username,\n        form.value.email,\n        form.value.password,\n        form.value.birthday\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.profileSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      Password must be grater than 5 characters.\n    \n    \n      \n      Confirm Password must be grater than 5 characters.\n    \n\n    \n      \n      Please enter a valid email.\n    \n\n    \n      \n      Please select date.\n    \n    Update\n    \n      Unregister\n    \n  \n\n 0\">\n  \n    \n      Favorite Movie Lists\n    \n    \n      {{ favorite }}\n      delete\n    \n  \n\n\n  No Favorite Movie added yet!\n\n\n    \n\n    \n                \n                    ./profile-update.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nbutton {\n  margin-right: 1rem;\n}\n\nmat-accordion {\n  display: block;\n  margin-top: 1rem;\n}\n\nmat-expansion-panel {\n  p {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  mat-icon {\n    margin-left: 2rem;\n    cursor: pointer;\n    color: red;\n  }\n}\n\n.info-text {\n  margin-top: 1rem;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Password must be grater than 5 characters.                    Confirm Password must be grater than 5 characters.                    Please enter a valid email.                    Please select date.        Update          Unregister       0\">            Favorite Movie Lists              {{ favorite }}      delete        No Favorite Movie added yet!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileUpdateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                authStatusSub\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register/register.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRegister\n                        \n                        \n                    \n                \n            \n            \n                \nonRegister(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register/register.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authStatusSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register/register.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((authStatus) => {\n        this.isLoading = false;\n      });\n  }\n\n  onRegister(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(\n      form.value.username,\n      form.value.password,\n      form.value.email,\n      form.value.birthday\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Username must be grater than 5 characters.\n    \n    \n      \n      Password must be grater than 5 characters.\n    \n\n    \n      \n      Please enter a valid email.\n    \n\n    \n      \n      Please select date.\n    \n    \n      Register\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                mat-form-field {\n  width: 100%;\n}\n\nmat-spinner {\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Username must be grater than 5 characters.                    Password must be grater than 5 characters.                    Please enter a valid email.                    Please select date.              Register          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': ''},{'name': 'MoviesComponent', 'selector': 'app-movies'},{'name': 'ProfileUpdateComponent', 'selector': ''},{'name': 'RegisterComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterData.html":{"url":"interfaces/RegisterData.html","title":"interface - RegisterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.data.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        birthday\n                                \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                    \n                                \n                                \n                                    \n                                        birthday:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterData {\n  username: string;\n  password: string;\n  email: string;\n  birthday: Date;\n}\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.data.model.ts\n            \n            interface\n            LoginData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.data.model.ts\n            \n            interface\n            RegisterData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/profile-update/profile-update.component.ts\n            \n            component\n            ProfileUpdateComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/auth/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/error-interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/error/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/movies/movies.componet.ts\n            \n            component\n            MoviesComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.4\n        \n            @angular/cdk : ^11.0.2\n        \n            @angular/common : ~11.0.4\n        \n            @angular/compiler : ~11.0.4\n        \n            @angular/core : ~11.0.4\n        \n            @angular/forms : ~11.0.4\n        \n            @angular/material : ^11.0.2\n        \n            @angular/platform-browser : ~11.0.4\n        \n            @angular/platform-browser-dynamic : ~11.0.4\n        \n            @angular/router : ~11.0.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nmyFlix-client-angular\n\nUsing Angular, build the client-side for an application called myFlix based on its existing server-side code (REST API and database), with supporting documentation.\n\nIt is a small movie app that includes authentication, profiles where you can change details and unregister, add favourite movie, and delete a favourite movie on your profile list.\n\nNote\nIn order to use the app, register first and if you want to see your added favourite movie list go to your profile.\nInstall Dependencies\nnpm installRun\nng serveDemo\nThe APP is live at mirjsolution.github.io/myflix-clent-angular\n\nVersion: 1.0.0\nLicense: MIT\nAuthor: Rico John Dato-on\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMoviesComponent\n\nMoviesComponent\n\nAppModule -->\n\nMoviesComponent->AppModule\n\n\n\n\n\nProfileUpdateComponent\n\nProfileUpdateComponent\n\nAppModule -->\n\nProfileUpdateComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
